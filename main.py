import json
import disnake
from json import load
from disnake.ext import commands
import random
import asyncio
import requests
import io
import os
import logging

with open(u"./config.json", "r") as file:
    config = load(file)

bot = commands.InteractionBot()

logging.basicConfig(level=logging.INFO, filename="logs.log", format='%(asctime)s | %(levelname)s | %(message)s', encoding='utf-8')

@bot.event
async def on_ready():
    print("–±–æ—Ç—è—Ä–∞ –≥–æ—Ç–æ–≤")
    logging.info('–±–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    await bot.change_presence(status=disnake.Status.idle, activity=disnake.Game(name='OneShot'))


# –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è?
main_color = disnake.Color.from_rgb(188, 49, 99)

#—ç–º–±–µ–¥ –æ—à–∏–±–∫–∏
async def error_embed(inter, error):
    embed = disnake.Embed(title='‚ùå –û–π...', description=f'üîç –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: `{error}`', color=main_color)
    await inter.send(embed=embed)
    print(f'–û—à–∏–±–∫–∞! | {error}')
    logging.error(error)


@bot.slash_command(name="–ø–∏–Ω–≥", description='–í—ã–≤–æ–¥–∏—Ç –≤ —á–∞—Ç –∑–∞–¥–µ—Ä–∂–∫—É')
async def user(inter):
    logging.info(f'–ö–æ–º–∞–Ω–¥–∞ "–ø–∏–Ω–≥" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {inter.author}')
    try:
        await inter.send(embed=disnake.Embed(title='‚ùó –ü–æ–Ω–≥!', description=f'üõú –ó–∞–¥–µ—Ä–∂–∫–∞: {bot.latency*1000:.2f} –º—Å',  colour=main_color))
    except Exception as e:
        await error_embed(inter, e)


@bot.message_command(name="–†–µ–≤—ë—Ä—Å")
async def reverse(inter: disnake.ApplicationCommandInteraction, message: disnake.Message):
    logging.info(f'–ö–æ–º–∞–Ω–¥–∞ "–†–µ–≤—ë—Ä—Å" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {inter.author}')
    try:
        await inter.response.send_message(f"{message.content[::-1]}\n{message.jump_url}")
    except Exception as e:
        await error_embed(inter, e)

@bot.slash_command(name='–∫–æ—Ç', description='–ö–æ—Ç. –ü—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –ø–∏–∫—á—É –∫–æ—Ç–∞')
async def catpicture(inter):
    logging.info(f'–ö–æ–º–∞–Ω–¥–∞ "–∫–æ—Ç" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {inter.author}')
    
    await inter.response.defer()

    try:
        response = requests.get("https://some-random-api.com/animal/cat")
        data = response.json()

        if response.status_code == 200:
            image_url = data["image"]
            image = requests.get(image_url)

        bytes = io.BytesIO(image.content)

        await inter.send(file=disnake.File(bytes, filename='kot.jpg'))
    except Exception as e:
        await error_embed(inter, e)

@bot.slash_command(name='–∞–Ω–æ–Ω–∏–º–Ω–æ–µ-—Å–æ–æ–±—â–µ–Ω–∏–µ', description="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞")
async def anonimus(inter, —Å–æ–æ–±—â–µ–Ω–∏–µ:str):
    logging.info(f'–ö–æ–º–∞–Ω–¥–∞ "–∞–Ω–æ–Ω–∏–º–Ω–æ–µ-—Å–æ–æ–±—â–µ–Ω–∏–µ" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {inter.author}')
    try:
        await inter.send("–ú–æ–ª–æ–¥–µ—Ü! –¢—ã –ø—Ä–æ—á–∏—Ç–∞–ª —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ì–æ—Ä–¥–∏—Å—å —Å–æ–±–æ–π —á—Ç–æ-–ª–∏", ephemeral=True)
        channel = inter.channel
        await inter.delete_original_response()
        await channel.send(—Å–æ–æ–±—â–µ–Ω–∏–µ)
        print(f'–ê–Ω–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ | "{—Å–æ–æ–±—â–µ–Ω–∏–µ}" –æ—Ç {inter.author}')
        logging.info(f'–ê–Ω–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ | "{—Å–æ–æ–±—â–µ–Ω–∏–µ}" –æ—Ç {inter.author}')
    except Exception as e:
        await error_embed(inter, e)

@bot.slash_command(name='—Ä–∞–Ω–¥–æ–º', description='–í—ã–≤–æ–¥–∏—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ')
async def randomchislo(inter, –¥–∏–∞–ø–∞–∑–æ–Ω:int):
    logging.info(f'–ö–æ–º–∞–Ω–¥–∞ "—Ä–∞–Ω–¥–æ–º" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {inter.author}')
    try:
        if –¥–∏–∞–ø–∞–∑–æ–Ω <= 0:
            await inter.send(embed = disnake.Embed(title='–≠–π!', description='–î–∏–∞–ø–∞–∑–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–µ–Ω –∏–ª–∏ –±—ã—Ç—å –º–µ–Ω—å—à–µ –Ω—É–ª—è.', color=main_color), ephemeral=True)
        else:
            embed = disnake.Embed(title=f'–¢–≤–æ—ë —á–∏—Å–ª–æ: {random.randint(1, –¥–∏–∞–ø–∞–∑–æ–Ω)}', color=main_color)
            await inter.send(embed=embed)
    except Exception as e:
        await error_embed(inter, e)

@bot.slash_command(name='fakenitro-—ç–º–æ–¥–∂–∏', description='–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ FakeNitro —ç–º–æ–¥–∂–∏')
async def fakenitrogen(inter, —ç–º–æ–¥–∂–∏:str):
    logging.info(f'–ö–æ–º–∞–Ω–¥–∞ "fakenitro-—ç–º–æ–¥–∂–∏" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {inter.author}')
    try:
        emoji = disnake.PartialEmoji.from_str(—ç–º–æ–¥–∂–∏)
        if emoji.url == '':
            await inter.send(embed=disnake.Embed(title='–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —ç–º–æ–¥–∂–∏', description='–°—Å—ã–ª–∫–∞ –Ω–∞ —ç–º–æ–¥–∂–∏ –ø—É—Å—Ç–∞—è', color=main_color))
        else:
            embed = disnake.Embed(title='–¢–≤–æ—è FakeNitro —Å—Å—ã–ª–∫–∞ –Ω–∞ —ç–º–æ–¥–∂–∏', description=f"`[{emoji.name}]({emoji.url})`", color=main_color)
            await inter.send(embed=embed)
    except Exception as e:
        await error_embed(inter, e)

@bot.slash_command(name='–æ—à–∏–±–∫–∞', description='–≤—ã–∑—ã–≤–∞–µ—Ç —ç–º–±–µ–¥ –æ—à–∏–±–∫–∏ —Å –∑–∞–¥–∞–Ω—ã–º —Ç–∏–ø–æ–º –æ—à–∏–±–∫–∏')
async def raiseaerror(inter):
    logging.info(f'–ö–æ–º–∞–Ω–¥–∞ "–æ—à–∏–±–∫–∞" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {inter.author}')
    try:
        raise SyntaxError("–≤—ã–∑–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        await error_embed(inter, e)

@bot.slash_command(name='—Å—Ç–æ–ø', description='—Å—Ç–æ–ø–∞–µ—Ç –±–æ—Ç–∞')
async def botstop(inter):
    if bot.owner.id != inter.author.id:
        await inter.send(embed=disnake.Embed(title='–û–π', description='–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–≤–Ω–µ—Ä—É', color=main_color))
        return
    await inter.send(embed=disnake.Embed(title='–í—ã–∫–ª—é—á–∞—é—Å—å...', color=main_color))
    exit()

@bot.slash_command(name='–æ—á–∏—Å—Ç–∏—Ç—å-–ª–æ–≥–∏', description='–æ—á–∏—â–∞–µ—Ç –ª–æ–≥–∏')
async def clearlogs(inter):
    if bot.owner.id != inter.author.id:
        await inter.send(embed=disnake.Embed(title='–û–π', description='–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–≤–Ω–µ—Ä—É', color=main_color))
        return
    logsfile = open('logs.log', mode='w')
    logsfile.write('')
    await inter.send(embed=disnake.Embed(title='–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã'))

@bot.user_command(name="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é–∑–µ—Ä–µ")
async def userinfo(inter: disnake.ApplicationCommandInteraction, user: disnake.User):

    logging.info(f'–ö–æ–º–∞–Ω–¥–∞ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é–∑–µ—Ä–µ" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {inter.author}')
    
    isBot = None
    isOwner = None
    dopinfo = "–Ω–µ—Ç—É"

    try:
        if user.bot == True:
            isBot = "–î–∞"
        else:
            isBot = '–ù–µ—Ç'

        if user.id == 669577742924251159:
            isOwner = '–î–∞'
            dopinfo = '–µ—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–Ω—è–ª–∏, —Ç–æ —ç—Ç–æ –∫–æ–¥–µ—Ä –±–æ—Ç–∞'
        else:
            isOwner = '–ù–µ—Ç'

        if user.id == 1242475166483878000: #tvoy.furka
            dopinfo = '–∂–∏–≤–æ—Ç–Ω–æ–µ, –≥–∞–¥–∏–Ω–∞, —á—É—Ä—å–∫–∞, 17% –¥–æ–±—Ä–æ—Ç—ã, —Ç–µ–º–Ω–∏'

        if user.id == 1090144651111059567: #flaful_zzz...
            dopinfo = '–∫–∞–∫ —Ö–æ—á–µ—à—å'

        if user.id == 909825566969045083: #–±–∞–±–∞—Ö–∞–≤–æ–¥
            dopinfo = '—Ç–æ—Å—Ç–µ—Ä xd'

        if user.id == 1137277749258629150: #–∂–æ–ø–µ–∏—Ä
            dopinfo = '"–¥–æ–±—Ä—è–∫ —Å –º–æ—Ö–Ω–∞—Ç–æ–π –ø–æ–ø–∫–æ–π" - AbstractDevs'

        if user.id == 885576438646972496: #sionit_1337
            dopinfo = '–°–∏–æ–Ω–∏—Ç–æ–≤–æ–µ —Å–∏—è–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ –≥–Ω–µ–≤–∞'

        if user.id == 1056407095605469214: #abstractdevs
            dopinfo = '—á–µ–±—É—Ä–µ–∫ –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞'

        embed=disnake.Embed(title=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {user.display_name}',colour=main_color, description=f'üìõ –û—Ç–æ—Ä–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è: {user.display_name}\nüî∞ –ù–∏–∫–Ω–µ–π–º: {user.name}\nüî¢ –ê–π–¥–∏: {user.id}\nüî§ –°—Å—ã–ª–∫–∞: <https://discord.com/users/{user.id}>\nü§ñ –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç–æ–º?: {isBot}\nüîß –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–æ–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º?: {isOwner}\nüìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {dopinfo}')
        embed.set_image(url=user.avatar.url)

        await inter.response.send_message(embed=embed, components=[disnake.ui.Button(label='ü™™ –û—Ç–∫—Ä—ã—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É', style=disnake.ButtonStyle.url, url=user.avatar.url)])
    except Exception as e:
        await error_embed(inter, e)


bot.run(config["Token"])
